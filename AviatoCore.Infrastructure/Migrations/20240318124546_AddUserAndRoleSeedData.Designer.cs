// <auto-generated />
using AviatoCore.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AviatoCore.Infrastructure.Migrations
{
    [DbContext(typeof(AviatoDbContext))]
    [Migration("20240318124546_AddUserAndRoleSeedData")]
    partial class AddUserAndRoleSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AviatoCore.Domain.Entities.Airport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airports");
                });

            modelBuilder.Entity("AviatoCore.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanModifyAirports")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanModifyAirports = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CanModifyAirports = false,
                            Name = "Director"
                        },
                        new
                        {
                            Id = 3,
                            CanModifyAirports = false,
                            Name = "Security"
                        },
                        new
                        {
                            Id = 4,
                            CanModifyAirports = false,
                            Name = "Maintenance"
                        },
                        new
                        {
                            Id = 5,
                            CanModifyAirports = false,
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("AviatoCore.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.com",
                            Name = "admin",
                            Password = "admin",
                            RoleId = 1,
                            Surname = "admin"
                        });
                });

            modelBuilder.Entity("AviatoCore.Domain.Entities.Client", b =>
                {
                    b.HasBaseType("AviatoCore.Domain.Entities.User");

                    b.Property<string>("ClientType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("AviatoCore.Domain.Entities.Worker", b =>
                {
                    b.HasBaseType("AviatoCore.Domain.Entities.User");

                    b.Property<int>("AirportId")
                        .HasColumnType("int");

                    b.HasIndex("AirportId");

                    b.ToTable("Workers", (string)null);
                });

            modelBuilder.Entity("AviatoCore.Domain.Entities.User", b =>
                {
                    b.HasOne("AviatoCore.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AviatoCore.Domain.Entities.Client", b =>
                {
                    b.HasOne("AviatoCore.Domain.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("AviatoCore.Domain.Entities.Client", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AviatoCore.Domain.Entities.Worker", b =>
                {
                    b.HasOne("AviatoCore.Domain.Entities.Airport", "Airport")
                        .WithMany()
                        .HasForeignKey("AirportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AviatoCore.Domain.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("AviatoCore.Domain.Entities.Worker", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airport");
                });
#pragma warning restore 612, 618
        }
    }
}
